name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-base-compiler:
    runs-on: ubuntu-latest
    outputs:
      compiler-tag: ${{ steps.check.outputs.compiler-tag }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Determine compiler tag
        id: check
        run: |
          COMPILER_HASH="${{ hashFiles('**/shard.yml', '**/shard.lock') }}"
          COMPILER_TAG="base-compiler-${COMPILER_HASH}"
          echo "compiler-tag=${COMPILER_TAG}" >> $GITHUB_OUTPUT
          echo "Generated compiler tag: ${COMPILER_TAG}"

  build-image:
    runs-on: ubuntu-latest
    needs: [check-base-compiler, docker-lint, docker-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Docker Hub
        if: secrets.DOCKER_USERNAME != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build and push runtime image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ secrets.DOCKER_USERNAME != '' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/rentcast-proxy:latest
            ${{ secrets.DOCKER_USERNAME }}/rentcast-proxy:${{ github.sha }}
          cache-from: |
            type=gha,scope=runtime
          cache-to: type=gha,scope=runtime,mode=max
          platforms: linux/amd64
          build-args: |
            BASE_COMPILER_TAG=${{ needs.check-base-compiler.outputs.compiler-tag }}
            BUILDKIT_INLINE_CACHE=1

  docker-lint:
    runs-on: ubuntu-latest
    needs: check-base-compiler
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Run ameba linting
        uses: docker/build-push-action@v5
        with:
          context: .
          target: builder
          cache-from: |
            type=gha,scope=lint
          cache-to: type=gha,scope=lint,mode=max
          platforms: linux/amd64
          build-args: |
            BASE_COMPILER_TAG=${{ needs.check-base-compiler.outputs.compiler-tag }}
            BUILDKIT_INLINE_CACHE=1

  docker-test:
    runs-on: ubuntu-latest
    needs: check-base-compiler
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and test application
        uses: docker/build-push-action@v5
        with:
          context: .
          target: builder
          cache-from: |
            type=gha,scope=test
          cache-to: type=gha,scope=test,mode=max
          platforms: linux/amd64
          build-args: |
            BASE_COMPILER_TAG=${{ needs.check-base-compiler.outputs.compiler-tag }}
            BUILDKIT_INLINE_CACHE=1